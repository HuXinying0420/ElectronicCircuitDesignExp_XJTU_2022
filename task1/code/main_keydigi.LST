C51 COMPILER V9.52.0.0   MAIN_KEYDIGI                                                      04/13/2022 20:08:26 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN_KEYDIGI
OBJECT MODULE PLACED IN main_keydigi.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE main_keydigi.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1           #include <stdio.h>
   2          
   3          #include "c8051f020.h"
   4          #include "stdlib.h"
   5          #include "lcd.h"
   6          #include "led.h"
   7          #include "xjtu_image.h"
   8          #include "1.h"
   9          #include "2.h"
  10          #include "3.h"
  11          //#include "flower.h"
  12          #include <intrins.h>
  13          #define uchar unsigned char          
  14          #define uint  unsigned int 
  15          #define SYSCLK    11059200
  16          
  17          #define TIMER_PRESCALER            12  // Based on Timer CKCON settings
  18          
  19          #define LED_TOGGLE_RATE            100 // LED toggle rate in milliseconds    1ms
  20                                                 // if LED_TOGGLE_RATE = 1, the LED will
  21                                                 // be on for 1 millisecond and off for
  22                                                 // 1 millisecond
  23          sbit SCLK=P1^3;
  24          sbit SID=P1^4;
  25          sbit CS=P1^5; 
  26          uchar code AC_TABLE1[]={
  27          0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,      //第一行汉字位置
  28          0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,      //第二行汉字位置
  29          0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,      //第三行汉字位置
  30          0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,      //第四行汉字位置
  31          };
  32          // There are SYSCLK/TIMER_PRESCALER timer ticks per second, so
  33          // SYSCLK/TIMER_PRESCALER/1000 timer ticks per millisecond.
  34          #define TIMER_TICKS_PER_MS  SYSCLK/TIMER_PRESCALER/1000
  35          
  36          // Note: LED_TOGGLE_RATE*TIMER_TICKS_PER_MS should not exceed 65535 (0xFFFF)
  37          // for the 16-bit timer
  38          
  39          #define AUX1     TIMER_TICKS_PER_MS*LED_TOGGLE_RATE
  40          #define AUX2     -AUX1
  41          #define AUX3     AUX2&0x00FF
  42          #define AUX4     ((AUX2&0xFF00)>>8)
  43          
  44          #define TIMER0_RELOAD_HIGH       AUX4  // Reload value for Timer0 high byte
  45          #define TIMER0_RELOAD_LOW        AUX3  // Reload value for Timer0 low byte
  46          
  47          
  48          sbit INT1 = P0^3; 
  49          
  50          unsigned int Time_num; //全局计时用
  51          unsigned int ren_posi;//小人位置
  52          unsigned int zongshu;
  53          unsigned int defen;
  54          
  55          
C51 COMPILER V9.52.0.0   MAIN_KEYDIGI                                                      04/13/2022 20:08:26 PAGE 2   

  56          
  57          //-----------------------------------------------
  58          //系统时钟初始化
  59          //---------------------------------------------
  60          void SYSCLK_Init (void)
  61          {
  62   1         int i;                      // 延时计数器
  63   1         OSCXCN = 0x67;              // 使用外部晶振
  64   1         for (i=0; i<256; i++);      // 等待1ms
  65   1         while (!(OSCXCN & 0x80));   // 等待外部晶振稳定
  66   1         OSCICN = 0x88;              // 切换到外部晶振
  67   1      }
  68          
  69          void Port_IO_Init()
  70          {
  71   1              //set P4[1] to push_pull model
  72   1          P74OUT |= 0x01;
  73   1              
  74   1              //enable crossbar
  75   1          XBR2 |= 0x40;
  76   1      
  77   1          //close the alam P4.1
  78   1          P4 &= 0xfd;
  79   1              
  80   1              //uart1,int1
  81   1              XBR1 |= 0x14;
  82   1              XBR2 |= 0x44;
  83   1      }
  84          
  85          //--------------------------------------------------
  86          void Clear(int l)
  87          {
  88   1      
  89   1           uchar i;
  90   1           WriteCommand(0x30);      //8BitMCU
  91   1                       WriteCommand(AC_TABLE1[8*l]);      //起始位置
  92   1      
  93   1                 for(i=0;i<16;i++){
  94   2           WriteData(0x20);//空格
  95   2              }       
  96   1      }
  97          //-----------------------------------------------------------
  98          void LcmClear( void )
  99          {
 100   1           uchar i;
 101   1           WriteCommand(0x30);      //8BitMCU
 102   1           WriteCommand(0x80);      //AC归起始位
 103   1               for(i=0;i<4;i++){
 104   2                      Clear(i);
 105   2               }
 106   1      }
 107          
 108          void Oscillator_Init()
 109          {
 110   1          int i = 0;
 111   1          OSCXCN    = 0x67;
 112   1          for (i = 0; i < 3000; i++);  // Wait 1ms for initialization
 113   1          while ((OSCXCN & 0x80) == 0);
 114   1          OSCICN    = 0x08;
 115   1      }
 116          
 117          void Timer0_Init(void)
C51 COMPILER V9.52.0.0   MAIN_KEYDIGI                                                      04/13/2022 20:08:26 PAGE 3   

 118          {
 119   1              TH0 = TIMER0_RELOAD_HIGH;           // Reinit Timer0 High register
 120   1              TL0 = TIMER0_RELOAD_LOW;
 121   1              ET0 = 1;                            // Timer0 interrupt enabled
 122   1              TMOD = 0x01;                        // 16-bit Mode Timer0
 123   1              //TCON |= 0x10;                        // Timer0 ON
 124   1      }
 125          
 126          void Interrupt_Init()
 127          {
 128   1              //INT1
 129   1              //low level triggle
 130   1              IT1 = 0;
 131   1              //enable INT1
 132   1              EX1 = 1;
 133   1              //enable all interrupt
 134   1              EA = 1;
 135   1      }
 136          
 137          void Init_Device(void)
 138          {
 139   1          //disable watchdog
 140   1          EA = 0;
 141   1          WDTCN = 0xde;
 142   1          WDTCN = 0xad;
 143   1          EA = 1;
 144   1              
 145   1          Oscillator_Init();
 146   1          Port_IO_Init();
 147   1              Timer0_Init();
 148   1              
 149   1              Interrupt_Init();
 150   1              
 151   1          LcdInit();
 152   1              LedInit();
 153   1      }
 154          
 155          
 156          uchar code str0[]="                   ";
 157          uchar code str1[]="  接樱花!!!  ";
 158          uchar code str2[]="  中间键开始！    左右键移动  ";
 159          void PutStr(uchar row,uchar col,uchar *puts)
 160          {
 161   1           WriteCommand(0x30);      //8BitMCU
 162   1           WriteCommand(AC_TABLE1[8*row+col]);      //起始位置
 163   1           while(*puts !='\0')      //判断字符串是否显示完毕
 164   1           {
 165   2                 if(col==8)            //判断换行
 166   2                 {            //若不判断,则自动从第一行到第三行
 167   3                       col=0;
 168   3                       row++;
 169   3                 }
 170   2                 if(row==4) row=0;      //一屏显示完,回到屏左上角
 171   2                 WriteCommand(AC_TABLE1[8*row+col]);
 172   2                 WriteData(*puts);      //一个汉字要写两次
 173   2                 puts++;
 174   2                 WriteData(*puts);
 175   2                 puts++;
 176   2                 col++;
 177   2           }
 178   1      }
 179          
C51 COMPILER V9.52.0.0   MAIN_KEYDIGI                                                      04/13/2022 20:08:26 PAGE 4   

 180          void Delay_us(unsigned int times)
 181          {
 182   1              unsigned int i,j;
 183   1              
 184   1              for (i = 0; i< times; i++)
 185   1              {
 186   2                      for (j = 0; j < 11; j++)
 187   2                      {
 188   3                              _nop_();
 189   3          }
 190   2        }
 191   1      }
 192          
 193          //void shanshuo(void)
 194          //{      
 195          //      while(1)
 196          //      {
 197          //              if(begin==1)
 198          //                      {       
 199          //                                      ImageShow();
 200          //////                                  xuehua_posi_lie[m+1]=xuehua_posi_lie[m]++;
 201          ////                                    m++;
 202          ////                            
 203          //                              Delay_ms(500);
 204          //                      }
 205          //                      else LcmClear();
 206          //              }
 207          //}
 208          //-----------------------------------------------------------------------------
 209          // 主程序
 210          //-----------------------------------------------------------------------------
 211          
 212          void main()
 213          {       
 214   1        Init_Device();
 215   1              
 216   1              INT1 = 1;
 217   1              PutStr(0, 0, str0);
 218   1          PutStr(1, 0, str1);
 219   1          PutStr(2, 0, str2);
 220   1              zongshu=0;
 221   1              defen=0;
 222   1              ren_posi=4;
 223   1              
 224   1          while(1)
 225   1          {
 226   2                              LedDispNum();   //显示三行数据
 227   2      //                      if(Time_num%50==0)
 228   2      //                      {
 229   2      //                                      ImageShow();
 230   2      //                      }
 231   2                              P5 = 0xFB;Delay_us(5);
 232   2                              P5 = 0xFD;Delay_us(5);
 233   2                              P5 = 0xFE;Delay_us(5);
 234   2          }
 235   1      }
 236          
 237          void INT1_ISR(void) interrupt 2
 238          {
 239   1              Delay_ms(100);
 240   1      
 241   1              switch(P5)
C51 COMPILER V9.52.0.0   MAIN_KEYDIGI                                                      04/13/2022 20:08:26 PAGE 5   

 242   1              {
 243   2                      //sub
 244   2                      case 0xfb:   //左键
 245   2                      //Time_num = 0; //计时清零      
 246   2                      //LcmClear();
 247   2                      ren_posi=ren_posi-1;
 248   2                      ren_posi=(ren_posi)%8;
 249   2                      ImageShow_ren();
 250   2                      break;  
 251   2                      
 252   2                      case 0xfd:   //中间键
 253   2                      TR0 = 1;  // 开始计时
 254   2                      Time_num = 1000;
 255   2                      LcmClear();
 256   2                      ren_posi=4;
 257   2                      defen=0;
 258   2                      zongshu=0;
 259   2                      ImageShow_ren();
 260   2                      ImageShow();
 261   2                      //shanshuo();
 262   2                      break;
 263   2                      
 264   2                      case 0xfe:    //右键
 265   2              //TR0 = 0;  // 关闭计时
 266   2                      //LcmClear();
 267   2                      //TR0=1;
 268   2                      ren_posi=ren_posi+1;
 269   2                      ren_posi=(ren_posi)%8;
 270   2                      ImageShow_ren();        
 271   2                      break;
 272   2              }
 273   1      }
 274          
 275          void Timer0_ISR (void) interrupt 1
 276          {
 277   1              TH0 = TIMER0_RELOAD_HIGH;           // Reinit Timer0 High register
 278   1              TL0 = TIMER0_RELOAD_LOW;
 279   1              Time_num--;
 280   1              if(Time_num%30==0)
 281   1              {
 282   2                      ImageShow();
 283   2              }
 284   1              if(Time_num == 0) 
 285   1              {
 286   2                      PutStr(0, 0, str0);
 287   2                      PutStr(1, 0, str1);
 288   2                      PutStr(2, 0, str2);
 289   2                      TR0 = 0;  // 关闭计时
 290   2              }
 291   1      }
 292          
 293          
 294          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    745    ----
   CONSTANT SIZE    =   4193    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       9
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   MAIN_KEYDIGI                                                      04/13/2022 20:08:26 PAGE 6   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
