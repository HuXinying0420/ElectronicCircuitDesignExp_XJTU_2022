C51 COMPILER V9.52.0.0   LCDPHOTO                                                          04/05/2022 19:18:56 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCDPHOTO
OBJECT MODULE PLACED IN lcdphoto.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE lcdphoto.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include"c8051f020.h"
   2          #include <intrins.h>
   3          #include <stdio.h>
   4          
   5          #define uchar unsigned char          
   6          #define uint  unsigned int 
   7          
   8          #define SYSCLK    11059200
   9          
  10          //-----------------------------------------------------------------------------
  11          // 液晶接口定义
  12          //-----------------------------------------------------------------------------
  13          sbit SCLK=P1^3;
  14          sbit SID=P1^4;
  15          sbit CS=P1^5;
  16          
  17          //-----------------------------------------------------------------------------
  18          // 函数定义
  19          //-----------------------------------------------------------------------------
  20          void Lcd_Port_Init(void);
  21          void LcdInit(void);
  22          
  23          void Delay_ms(uint t);
  24          void Delay(uint k);
  25          
  26          void SendByte(uchar Dbyte);
  27          uchar ReceiveByte(void);
  28          void CheckBusy(void);
  29          
  30          void WriteData(uchar WDLCM);
  31          void WriteCommand (uchar Cbyte);
  32          
  33          void LineClear(uchar l);
  34          void LcdClear( void );
  35          
  36          void WriteChar(uchar row,uchar col,uchar ch);
  37          void WriteStr(uchar row,uchar col,uchar *puts);
  38          
  39          void ImageShow(uchar *imagePtr);
  40          
  41          const unsigned char code xjtu_image1[1024] = { /* 0X00,0X01,0X80,0X00,0X40,0X00, */
  42          0X60,0X00,0XD6,0XFD,0X67,0X80,0X08,0X00,0X00,0X00,0X00,0X10,0X00,0X94,0XBC,0X00,
  43          0XBF,0X00,0X87,0XDF,0X8D,0X00,0X5C,0X00,0X00,0X00,0X00,0X06,0X01,0XE6,0X98,0X00,
  44          0XEC,0X01,0XFF,0X17,0X09,0XA2,0X7F,0X80,0X00,0X00,0X00,0XDE,0X07,0XC1,0XB0,0X00,
  45          0XC5,0X03,0XFF,0XEB,0XC8,0X7F,0X7B,0X84,0X00,0X00,0X25,0X8B,0XF8,0X01,0XA0,0X00,
  46          0X80,0X6F,0XFF,0X79,0X5F,0XB7,0X47,0X9C,0X00,0X00,0X04,0X0D,0XE0,0X61,0X80,0X00,
  47          0XC3,0XD7,0XFF,0XFB,0XBF,0X03,0X03,0X27,0XC8,0X00,0X28,0XFB,0XF0,0X40,0X1C,0X00,
  48          0XD7,0XFF,0XFF,0X7F,0X38,0X1F,0XE1,0XBE,0X08,0X00,0X35,0XC0,0XC0,0X00,0X1C,0X00,
  49          0XFF,0XFF,0XE1,0XFE,0XDC,0X00,0X11,0X71,0X08,0X00,0X42,0X0A,0X00,0X41,0XDC,0X40,
  50          0XFF,0XFF,0XFF,0X7D,0XDC,0X10,0X61,0XED,0X58,0X00,0X02,0X00,0X20,0X83,0XD9,0XC0,
  51          0XFF,0XFF,0XFF,0XFE,0XDF,0X68,0X13,0XFD,0X04,0X00,0X04,0X00,0X40,0X1D,0XC5,0XCF,
  52          0XFF,0XFF,0XFF,0XFF,0XFA,0X76,0X77,0X6E,0XB7,0X80,0X00,0X00,0X00,0XF5,0X1C,0XC0,
  53          0XFF,0XFF,0XFF,0XFF,0XFB,0XFF,0XA1,0X13,0XF3,0X80,0X00,0X00,0X01,0XDC,0X6C,0X81,
  54          0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0X63,0XA3,0XC0,0X00,0X00,0X0E,0XC3,0X6C,0X07,
  55          0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF1,0XE1,0X40,0X40,0X00,0X00,0X7E,0XD7,0X60,0X1F,
C51 COMPILER V9.52.0.0   LCDPHOTO                                                          04/05/2022 19:18:56 PAGE 2   

  56          0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFD,0X8F,0X80,0X00,0X00,0X03,0X6C,0X3B,0X80,0X7F,
  57          0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XEF,0X83,0X00,0X00,0X0F,0XF3,0XBB,0X03,0XFF,
  58          0XFF,0XF8,0XFF,0XF9,0XFF,0XFF,0X7F,0XE6,0X3C,0X00,0X00,0X0D,0X0F,0XB8,0X0F,0XFF,
  59          0XFF,0X78,0XFF,0XFB,0XBF,0XFE,0XFB,0XF9,0X7F,0XF0,0X00,0X08,0XFB,0X80,0X7F,0XFF,
  60          0XFF,0XE9,0XEC,0XFF,0XFF,0X1E,0XC5,0XF2,0XFE,0X00,0X00,0X07,0X58,0X03,0XFF,0XFF,
  61          0XFF,0XF3,0XE7,0XFF,0XFF,0X9F,0XC4,0XEF,0X80,0X00,0X00,0X57,0X40,0X1F,0XFF,0XFF,
  62          0XFF,0XE3,0XEF,0XFF,0XFF,0X07,0XFA,0XE0,0X00,0X00,0X00,0X75,0X00,0XFF,0XFF,0XFF,
  63          0X82,0X73,0XF7,0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,0X00,0X30,0X0F,0XFF,0XFF,0XFF,
  64          0X00,0X00,0X00,0X00,0X00,0X00,0X10,0X00,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XF0,
  65          0X00,0X00,0X01,0X00,0X20,0X30,0X78,0X00,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XC0,
  66          0X00,0X00,0X03,0XC0,0XE0,0X38,0X7C,0X00,0X00,0X00,0X03,0XDF,0XF7,0XFF,0XFF,0XC0,
  67          0X00,0X00,0X07,0X80,0X60,0X60,0XF8,0X00,0X00,0X00,0X7F,0X8F,0XFF,0XFC,0XFF,0X80,
  68          0X00,0X00,0X03,0X01,0XE0,0X78,0XF8,0X00,0X00,0X0F,0XFF,0X8F,0XF8,0X51,0XFF,0XCE,
  69          0X00,0X00,0X07,0X01,0XF0,0X90,0X70,0X00,0X0F,0XFF,0XFF,0X9E,0X00,0X03,0XFF,0XFC,
  70          0X00,0X00,0X19,0X80,0X31,0X00,0X30,0X3F,0XFF,0XFF,0XFF,0XE0,0X00,0X03,0XFF,0XDA,
  71          0X00,0X00,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X0F,0XFF,0XD0,
  72          0XFF,0XFF,0XFF,0XFF,0XFE,0X7F,0XFF,0XFF,0XFF,0XDF,0XFC,0X00,0X00,0X1F,0XFF,0XC1,
  73          0XFF,0XFF,0XFF,0XFF,0XFE,0X7F,0XFF,0XF8,0X02,0X0F,0XFF,0XC0,0X01,0XFF,0XFF,0XFE,
  74          0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X80,0X00,0X00,0X0F,0XFF,0X20,0X00,0X7F,0XFF,0XFF,
  75          0XFF,0XFF,0XFF,0XFF,0X9E,0X00,0X80,0X00,0X1E,0X27,0XDF,0X40,0X01,0XFF,0XFF,0XFF,
  76          0XFF,0XFF,0XFF,0XFF,0X9F,0X00,0X80,0X03,0X7F,0XEB,0X07,0X60,0X03,0XFF,0XFF,0XFF,
  77          0XFF,0XFF,0XFF,0XFF,0XBE,0XC1,0X00,0X19,0XFF,0XF8,0X07,0XD4,0X01,0XFF,0XFF,0XFF,
  78          0XFF,0XFF,0XCF,0XFF,0XBF,0X02,0X00,0X77,0XFF,0XFC,0X07,0XF7,0X8E,0XFF,0XFF,0XFF,
  79          0XFF,0XFF,0XC1,0X78,0XBF,0X26,0X00,0XFF,0XFD,0XFC,0X07,0XFF,0XCB,0XFF,0XFF,0XFF,
  80          0XFF,0XFF,0XC0,0X00,0XBF,0XAC,0X00,0XFF,0XFF,0XFC,0X07,0XFF,0XE7,0XFF,0XFF,0XFF,
  81          0XFF,0XFF,0XC0,0X00,0XBF,0X3C,0X03,0XFF,0XFF,0XFC,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,
  82          0XFF,0XFF,0X80,0X00,0X3F,0XF7,0XDF,0XFF,0XFF,0XFC,0X07,0XF7,0XFF,0XFF,0XFF,0XEF,
  83          0XFF,0XF5,0XFF,0XF8,0X3F,0XEF,0XCF,0XFF,0XFF,0XFE,0X0F,0XFF,0XBF,0XF0,0X00,0X03,
  84          0XFF,0XEF,0XFF,0XFC,0X3F,0XFF,0XFF,0XFF,0XFF,0XFE,0X08,0X00,0X82,0X9F,0XFF,0XFF,
  85          0XFF,0XEF,0XFF,0XFC,0X3F,0XFF,0XFF,0XFF,0XF8,0X26,0X0F,0XF8,0X37,0XDF,0XFF,0XFF,
  86          0XFF,0XEF,0XFF,0XFC,0X3F,0XFF,0XFF,0XFF,0XDE,0X2E,0X0D,0XF8,0X3F,0X5F,0XFF,0XFF,
  87          0XFF,0XEF,0XFF,0XFC,0XBF,0XFF,0XFF,0XFF,0X50,0X20,0X0B,0XFC,0X0F,0XCF,0XFF,0XFF,
  88          0XFF,0XEF,0XFF,0XFC,0X3D,0XBF,0XFE,0XFF,0X90,0X24,0X01,0XC0,0X5F,0XC0,0X00,0X1E,
  89          0XFF,0XEF,0XFF,0XFC,0X36,0X1F,0XFF,0XFF,0XD0,0X2C,0X0C,0X00,0X40,0X00,0X00,0X0A,
  90          0XFF,0XCC,0X00,0X00,0X3E,0XBF,0XEF,0X8B,0XDE,0X20,0X08,0X00,0X62,0X00,0X01,0X07,
  91          0XFF,0XC0,0X00,0X00,0XFF,0XD1,0X0F,0XE0,0X0F,0XFF,0XF8,0XC3,0XE0,0X00,0X00,0X17,
  92          0XFF,0XF8,0X00,0X07,0XFF,0XFC,0X00,0X18,0X01,0XFE,0X00,0X00,0X00,0X00,0X00,0X00,
  93          0XFF,0XF8,0X0F,0XFF,0XF0,0X00,0X30,0X18,0X7C,0X7C,0X00,0X00,0X00,0X00,0X00,0X00,
  94          0XFF,0XFF,0XFF,0XF2,0XFF,0XFF,0XFF,0XFF,0XFC,0X3F,0XFF,0XFF,0XF8,0X00,0X00,0X00,
  95          0XFF,0XFF,0XFF,0XE3,0XFF,0XFD,0XF7,0XFF,0XFE,0X1F,0XFF,0XF4,0X00,0XAF,0XFF,0XFF,
  96          0XFF,0XC7,0XFF,0XFF,0XEF,0XFF,0XFF,0XFF,0XFF,0X0F,0XC0,0XFF,0X60,0X31,0XFF,0XFF,
  97          0XFF,0X8F,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0XFC,0X03,0XFF,0XFF,0XC0,0X4B,0XFF,0XFF,
  98          0XFF,0XFF,0X83,0XFF,0XFF,0XFF,0XFE,0X00,0X3F,0X83,0XFF,0XFF,0XE6,0X03,0XFF,0XFF,
  99          0XFF,0XF8,0X00,0XFF,0XFF,0XFC,0X00,0X7F,0XFF,0X81,0XFF,0XFF,0XF8,0X1F,0XFF,0XFF,
 100          0XC0,0X00,0X7F,0XFF,0XF8,0X01,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XE0,0X0F,0XFF,0XFF,
 101          0XFF,0XFF,0XFF,0XF0,0X0F,0XFF,0XE0,0X7F,0XFF,0XE0,0X7F,0XFF,0XCF,0X03,0XFF,0XFF,
 102          0XFF,0XFF,0X00,0X1F,0XFF,0XFF,0XC3,0XFF,0XFF,0XE0,0X3F,0XFF,0XF3,0XFF,0XFF,0XFF,
 103          0XFC,0X00,0X7F,0XFF,0XFF,0XFD,0XFC,0XFF,0XFF,0XE0,0X1F,0XFF,0X9E,0X0F,0XFF,0XFF,
 104          0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XF0,0X0F,0XFF,0XF0,0X1F,0XFF,0XFF,
 105          0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XC7,0XFF,0XFF,0XF8,0X07,0XFF,0XEC,0X1F,0XFF,0XFF,
 106          };
 107          
 108          //constant definition
 109          uchar code AC_TABLE[]=
 110          {
 111              0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,      //第一行汉字位置
 112              0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,      //第二行汉字位置
 113              0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,      //第三行汉字位置
 114              0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,      //第四行汉字位置
 115          };
 116          
 117          
C51 COMPILER V9.52.0.0   LCDPHOTO                                                          04/05/2022 19:18:56 PAGE 3   

 118          
 119          void Lcd_Port_Init(void)
 120          {
 121   1        //set P1[5:3] to push_pull model
 122   1          P1MDOUT |= 0x38;
 123   1        
 124   1        //enable crossbar
 125   1          XBR2 |= 0x40;
 126   1      }
 127          void Port_IO_Init()
 128          {
 129   1        //set P4[1] to push_pull model
 130   1          P74OUT |= 0x01;
 131   1        
 132   1        //enable crossbar
 133   1          XBR2 |= 0x40;
 134   1      
 135   1          //close the alam P4.1
 136   1          P4 &= 0xfd;
 137   1        
 138   1        //uart1,int1
 139   1        XBR1 |= 0x14;
 140   1        XBR2 |= 0x44;
 141   1      }
 142          
 143          void Oscillator_Init()
 144          {
 145   1          int i = 0;
 146   1          OSCXCN    = 0x67;
 147   1          for (i = 0; i < 3000; i++);  // Wait 1ms for initialization
 148   1          while ((OSCXCN & 0x80) == 0);
 149   1          OSCICN    = 0x08;
 150   1      }
 151          
 152          void Init_Device(void)
 153          {
 154   1          //disable watchdog
 155   1          EA = 0;
 156   1          WDTCN = 0xde;
 157   1          WDTCN = 0xad;
 158   1          EA = 1;
 159   1        
 160   1          Oscillator_Init();
 161   1          Port_IO_Init();
 162   1        
 163   1          LcdInit();
 164   1      }
 165          
 166          void LcdInit( void )
 167          {
 168   1          Lcd_Port_Init();
 169   1      
 170   1          WriteCommand(0x30);      //8BitMCU
 171   1          WriteCommand(0x03);      //AC?0,不改变DDRAM值
 172   1          WriteCommand(0x0C);      //显示ON,游标OFF,游标位反白OFF
 173   1          WriteCommand(0x01);      //清屏,AC归0
 174   1          WriteCommand(0x06);      //写入时,游标右移动
 175   1      
 176   1          LcdClear();
 177   1      }
 178          
 179          
C51 COMPILER V9.52.0.0   LCDPHOTO                                                          04/05/2022 19:18:56 PAGE 4   

 180          void Delay_ms(uint times)
 181          {
 182   1          uint i,j;
 183   1          for (i=0; i<times; i++)
 184   1              for (j=0; j<1300; j++);
 185   1      }
 186          
 187          void Delay(uint k)
 188          {
 189   1          do
 190   1          {
 191   2          }
 192   1          while( --k );
 193   1      }
 194          
 195          
 196          void SendByte(uchar Dbyte)
 197          {
 198   1          uchar i;
 199   1          for(i=0; i<8; i++)
 200   1          {
 201   2              SCLK = 0;
 202   2              Dbyte=Dbyte<<1;      //左移一位
 203   2              SID = CY;            //移出的位给SID
 204   2              SCLK = 1;
 205   2              SCLK = 0;
 206   2          }
 207   1      }
 208          
 209          uchar ReceiveByte(void)
 210          {
 211   1          uchar i, temp1, temp2, temp3;
 212   1          temp1 = 0;
 213   1          temp2 = 0;
 214   1          for(i=0; i<8; i++)
 215   1          {
 216   2              temp1=temp1<<1;
 217   2              SCLK = 0;
 218   2              SCLK = 1;
 219   2              SCLK = 0;
 220   2              if(SID) temp1++;
 221   2          }
 222   1          for(i=0; i<8; i++)
 223   1          {
 224   2              temp2=temp2<<1;
 225   2              SCLK = 0;
 226   2              SCLK = 1;
 227   2              SCLK = 0;
 228   2              if(SID) temp2++;
 229   2          }
 230   1        temp3 = (0xf0&temp1)+(0x0f&temp2);
 231   1          return (temp3);
 232   1      }
 233          
 234          void CheckBusy( void )
 235          {
 236   1          do   SendByte(0xfc);      //11111,RW(1),RS(0),0
 237   1          while(0x80&ReceiveByte());      //BF(.7)=1 Busy
 238   1      }
 239          
 240          void WriteCommand(unsigned char Cbyte )
 241          {
C51 COMPILER V9.52.0.0   LCDPHOTO                                                          04/05/2022 19:18:56 PAGE 5   

 242   1          CS = 1;
 243   1          CheckBusy();
 244   1          SendByte(0xf8);            //11111,RW(0),RS(0),0
 245   1          SendByte(0xf0&Cbyte);      //高四位
 246   1          SendByte(0xf0&Cbyte<<4);//低四位
 247   1          CS = 0;
 248   1      }
 249          
 250          void WriteData(uchar Dbyte )
 251          {
 252   1          CS = 1;
 253   1          CheckBusy();
 254   1          SendByte(0xfa);            //11111,RW(0),RS(1),0
 255   1          SendByte(0xf0&Dbyte);      //高四位
 256   1          SendByte(0xf0&Dbyte<<4);//低四位(先执行<<)
 257   1          CS = 0;
 258   1      }
 259          
 260          
 261          void LineClear(uchar line)
 262          {
 263   1      
 264   1          uchar i;
 265   1          WriteCommand(0x30);      //8BitMCU
 266   1          WriteCommand(AC_TABLE[8*line]);      //起始位置
 267   1      
 268   1          for(i=0; i<16; i++)
 269   1          {
 270   2              WriteData(0x20);//空格
 271   2          }
 272   1      }
 273          
 274          
 275          void LcdClear( void )
 276          {
 277   1          uchar i;
 278   1          for(i=0; i<4; i++)
 279   1          {
 280   2              LineClear(i);
 281   2          }
 282   1      }
 283          
 284          void WriteChar(uchar row,uchar col,uchar ch)
 285          {
 286   1        WriteCommand(0x30);      //8BitMCU
 287   1        WriteCommand(AC_TABLE[8*row+col]);      //起始位置
 288   1        WriteData(ch);
 289   1      }
 290          
 291          void WriteStr(uchar row,uchar col,uchar *puts)
 292          {
 293   1          WriteCommand(0x30);      //8BitMCU
 294   1          WriteCommand(AC_TABLE[8*row+col]);      //起始位置
 295   1          while(*puts !='\0')      //判断字符串是否显示完毕
 296   1          {
 297   2              if(col==8)            //判断换行
 298   2              {
 299   3                  //若不判断,则自动从第一行到第三行
 300   3                  col=0;
 301   3                  row++;
 302   3              }
 303   2              if(row==4) row=0;      //一屏显示完,回到屏左上角
C51 COMPILER V9.52.0.0   LCDPHOTO                                                          04/05/2022 19:18:56 PAGE 6   

 304   2              WriteCommand(AC_TABLE[8*row+col]);
 305   2              WriteData(*puts);      //一个汉字要写两次
 306   2              puts++;
 307   2              if(*puts == '\0')
 308   2              {
 309   3                  return;
 310   3              }
 311   2              WriteData(*puts);
 312   2              puts++;
 313   2              col++;
 314   2          }
 315   1      }
 316          
 317          
 318          //image init and show
 319          void ImageShow(uchar *imagePtr)
 320          {
 321   1        uchar i, j, k, columnPosition;
 322   1        //init
 323   1      
 324   1        for(i = 0; i < 2; i++)
 325   1        {
 326   2          columnPosition = 0x80 + 0x08 * i;
 327   2          for(j = 0; j < 32; j++)
 328   2          {
 329   3            
 330   3      /*  for(k = 0; k < 4; k++)   //左半屏显示
 331   3            {
 332   3              //RE = 1
 333   3              WriteCommand(0x34);
 334   3              //set start position
 335   3              WriteCommand(0x80 + j);
 336   3              WriteCommand(columnPosition + k);
 337   3              
 338   3              //RE = 0
 339   3              WriteCommand(0x30);
 340   3              //write two bytes continuously
 341   3              WriteData(0x00);
 342   3              WriteData(0x00);
 343   3            }*/
 344   3            
 345   3            for(k = 0; k < 8; k++)    //全屏显示
 346   3            {
 347   4              //RE = 1
 348   4              WriteCommand(0x34);
 349   4              //set start position
 350   4              WriteCommand(0x80 + j);
 351   4              WriteCommand(columnPosition + k);
 352   4              
 353   4              //RE = 1
 354   4              WriteCommand(0x30);
 355   4              //write two bytes continuously
 356   4              WriteData(*imagePtr++);
 357   4              WriteData(*imagePtr++);
 358   4            }
 359   3          }
 360   2        }
 361   1        WriteCommand(0x32);
 362   1        WriteCommand(0x36);
 363   1      }
 364          
 365          
C51 COMPILER V9.52.0.0   LCDPHOTO                                                          04/05/2022 19:18:56 PAGE 7   

 366          //-----------------------------------------------------------------------------
 367          // 主程序
 368          //-----------------------------------------------------------------------------
 369          
 370          void main()
 371          { 
 372   1      Init_Device();
 373   1      ImageShow(xjtu_image1);
 374   1        while(1);
 375   1      
 376   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    574    ----
   CONSTANT SIZE    =   1056    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
