C51 COMPILER V9.52.0.0   MAIN                                                              04/05/2022 19:11:44 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "digitron.h"
   2          
   3          main()
   4          {
   5   1        unsigned int i=0;
   6   1       //WDTCN = 0xde;
   7   1       // WDTCN = 0xad;
   8   1        WDTCN|= 0x07;
   9   1        WDTCN = 0xa5;
  10   1        WDTCN = 0xff;
  11   1        
  12   1      
  13   1        SYSCLK_Init ();
  14   1        PORT_Init();
*** WARNING C206 IN LINE 14 OF main.c: 'PORT_Init': missing function-prototype
  15   1        Timer3_Init(SYSCLK/SAMPLERATE0);
*** WARNING C206 IN LINE 15 OF main.c: 'Timer3_Init': missing function-prototype
*** ERROR C267 IN LINE 15 OF main.c: 'Timer3_Init': requires ANSI-style prototype
  16   1        ADC0_Init ();
  17   1        Timer2_Init ();
  18   1        DAC0_Init();
  19   1        Uart1_Init (BaudRate_9600);
  20   1      //  IT1=1;    //=1为跳沿触发
  21   1        EX1=1;
  22   1        AD0EN=1;
  23   1        EA=1;
  24   1        b485Send=0;
  25   1        P3=0x1f;
  26   1        Addr=~(P3&0x1f);
  27   1        Addr=Addr&0x1f;   
  28   1        p1=Flash_READ(1)*0.001;//
  29   1        p2=Flash_READ(2)*0.001;
  30   1        p3=Flash_READ(3)*0.001;
  31   1        p4=Flash_READ(4)*0.001;
  32   1        p5=Flash_READ5();
  33   1        while(1)
  34   1        {
  35   2          TR0=0;  
  36   2        TAMSwitch();
  37   2        timeProc();
  38   2        checkuart1(); 
  39   2        //if (P2_3&&(!P2_2))   //位置型算法
  40   2        //{
  41   2        if(flagkey==1)
  42   2          {flagkey=0;
  43   3            Timer1_Init();
  44   3          }
  45   2          key();
  46   2            if(AMflag)      //自动控制
  47   2              {
  48   3                  P2_6=1;
  49   3            if(flag)//2次采集之间有一段时间用来开关切换
  50   3            {
  51   4            flag=~flag;
  52   4                  AD0EN=0;
C51 COMPILER V9.52.0.0   MAIN                                                              04/05/2022 19:11:44 PAGE 2   

  53   4                  fbvoltage=p1*ADC0_result[1];
  54   4                  AD0EN=1;
  55   4            fbvoltage=fbfilter();
  56   4                  }
  57   3            else
  58   3            {
  59   4            flag=~flag;
  60   4            AD0EN=0;
  61   4                  voltage=p4*ADC0_result[0];
  62   4                  AD0EN=1;
  63   4            voltage=filter(voltage);
  64   4                if((voltage*p2+p5)<819.2)    DAC0_result[0]=p2*819.2+p5;
  65   4              else if((voltage*p2+p5)<4096) DAC0_result[0]=p2*voltage+p5;
  66   4                 else  DAC0_result[0]=4095;     
  67   4                 //DAC0_result[0]=p2*voltage;
  68   4            }
  69   3            i++;
  70   3            if(i>=50)
  71   3            {
  72   4              i=0;
  73   4              sv1=1.25*(voltage-819.2)/0.4096;//sv=1.25*(voltage-819.2)/0.4096;
  74   4                      //out1=1.25*(voltage-819.2)/0.4095;//sv=1.25*(voltage-819.2)/0.4096;
  75   4                  mv1=1.25*(fbvoltage-819.2)/0.4096;//mv=1.25*(fbvoltage-819.2)/0.4096;
  76   4                      out1=sv1;
  77   4                }
  78   3            dis_mv(mv1);
  79   3              dis_sv(sv1);
  80   3                  dis_out(sv1);
  81   3                 
  82   3              }
  83   2              else            //手动控制
  84   2                {
  85   3                  P2_6=0;
  86   3                if(flag)//2次采集之间有一段时间用来开关切换
  87   3            {
  88   4            flag=~flag;
  89   4                  AD0EN=0;
  90   4                  fbvoltage=p1*ADC0_result[1];
  91   4                  AD0EN=1;
  92   4            fbvoltage=fbfilter();
  93   4                  }
  94   3            else
  95   3            {
  96   4            flag=~flag;
  97   4            AD0EN=0;
  98   4                  voltage1=p4*ADC0_result[0];
  99   4                  AD0EN=1;
 100   4            voltage1=filter(voltage1);
 101   4           if((voltage*p2+p5)<819.2)  DAC0_result[0]=p2*819.2+p5;   
 102   4              else if((voltage*p2+p5)<4096) DAC0_result[0]=p2*voltage+p5;
 103   4                 else  DAC0_result[0]=4095;
 104   4          //  DAC0_result[0]=p2*voltage;
 105   4            }
 106   3            i++;
 107   3            if(i>=50)
 108   3            {
 109   4             i=0;
 110   4             sv1=1.25*(voltage1-819.2)/0.4096;  //sv=1.25*(voltage-819.2)/0.4096;
 111   4                   mv1=1.25*(fbvoltage-819.2)/0.4096;//mv=1.25*(fbvoltage-819.2)/0.4096;
 112   4                }
 113   3            out1=1.25*(voltage-819.2)/0.4095;//sv=1.25*(voltage-819.2)/0.4096;
 114   3                  dis_mv(mv1);
C51 COMPILER V9.52.0.0   MAIN                                                              04/05/2022 19:11:44 PAGE 3   

 115   3              dis_sv(sv1);
 116   3                  dis_out(out1);
 117   3                 }
 118   2              if(P2_2&&(!P2_3))  //增量型算法
 119   2                 {
 120   3                  /*if(a<8)  
 121   3                    { 
 122   3                      a++;
 123   3                P2_5=0;
 124   3                      P2_4=0;
 125   3               }       
 126   3                  else if(a>=8)*/
 127   3                {
 128   4               // if((sv1-mv1)>sv1*p3)
 129   4                       if((out1-mv1)>10000*p3)//绝对百分比
 130   4                        {
 131   5                        P2_5=1;
 132   5                        P2_4=0;
 133   5                        }
 134   4                 else if((mv1-out1)>10000*p3)//绝对百分比  //if((mv1-sv1)>sv1*p3)
 135   4                        {
 136   5                        P2_5=0;
 137   5                        P2_4=1;
 138   5                        }
 139   4               else
 140   4                  {
 141   5                        P2_5=0;
 142   5                        P2_4=0;
 143   5                          }
 144   4                        }}
 145   2               WDTCN = 0xa5;
 146   2        }
 147   1          
 148   1        }

C51 COMPILATION COMPLETE.  2 WARNING(S),  1 ERROR(S)
