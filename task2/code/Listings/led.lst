C51 COMPILER V9.52.0.0   LED                                                               04/27/2022 16:47:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE source\source\led.c BROWSE INCDIR(.\source\head file) DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\led.lst) TABS(2) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          
   3          /*selectÒÔ¼°displayº¯Êý£¬ÆäÖÐµÚÒ»¸öÊÇÑ¡ÔñÊýÂë¹Ü£¬´ÓÉÏµ½ÏÂ´Ó×óµ½ÓÒ1-12£¬µÚ¶þ¸öÊÇÏÔÊ¾Êý×Ö*/
   4          
   5          extern int xdata v[10];
   6          extern int xdata u[10];
   7          extern long ADC0_result[2];
   8          extern int w1;
   9          extern int x1;
  10          extern int y1;
  11          extern int z1;
  12          extern int w2;
  13          extern int x2;
  14          extern int y2;
  15          extern int z2;
  16          extern int result;
  17          extern long xdata result2;
  18          extern int w3;
  19          extern int x3;
  20          extern int y3;
  21          extern int z3;
  22          extern volatile unsigned char idata samplepos;
  23          extern volatile long idata slidesum;
  24          
  25          void Delay_us(unsigned int times)//ÑÓÊ±us
  26          {
  27   1          unsigned int i;
  28   1      
  29   1          for (i=0; i<times; i++)
  30   1          {
  31   2              _nop_();
  32   2              _nop_();
  33   2              _nop_();
  34   2             _nop_();
  35   2          }
  36   1      }
  37          void display(int a)  // ÏÔÊ¾Êý×Ö
  38          {
  39   1        switch(a)
  40   1        {
  41   2          case 0:P7=0xC0;break;
  42   2          case 1:P7=0xF9;break;
  43   2          case 2:P7=0xA4;break;
  44   2          case 3:P7=0xB0;break;
  45   2          case 4:P7=0x99;break;
  46   2          case 5:P7=0x92;break;
  47   2          case 6:P7=0x82;break;
  48   2          case 7:P7=0xF8;break;
  49   2          case 8:P7=0x80;break;
  50   2          case 9:P7=0x90;break;
  51   2          case 10:P7=0x88;break;//A
  52   2          case 11:P7=0x83;break;
  53   2          case 12:P7=0xC6;break;
  54   2          case 13:P7=0xA1;break;
C51 COMPILER V9.52.0.0   LED                                                               04/27/2022 16:47:32 PAGE 2   

  55   2          case 14:P7=0x86;break;
  56   2          case 15:P7=0x8e;break;
  57   2          default:P7=0xc0;break;
  58   2        }
  59   1      }
  60          
  61          void select(int b)  // Ñ¡ÔñÊýÂë¹Ü
  62          {
  63   1        switch(b)
  64   1        {     
  65   2          case 1: P5 = 0XFE;P6 = 0XFF;break;
  66   2          case 2: P5 = 0XFD;P6 = 0XFF;break;
  67   2          case 3: P5 = 0XFB;P6 = 0XFF;break;
  68   2          case 4: P5 = 0XF7;P6 = 0XFF;break;
  69   2          case 5: P5 = 0XEF;P6 = 0XFF;break;
  70   2          case 6: P5 = 0XDF;P6 = 0XFF;break;
  71   2          case 7: P5 = 0XBF;P6 = 0XFF;break;
  72   2          case 8: P5 = 0X77;P6 = 0XFF;break;
  73   2          case 9: P6 = 0XFE;P5 = 0XFF;break;
  74   2          case 10:P6 = 0XFD;P5 = 0XFF;break;
  75   2          case 11:P6 = 0XFB;P5 = 0XFF;break;
  76   2          case 12:P6 = 0XF7;P5 = 0XFF;break;
  77   2        }
  78   1      }
  79          
  80          void Led_Port_Init()
  81          {
  82   1          //set to push_pull model
  83   1          P74OUT &= 0xff;
  84   1      
  85   1          //enable crossbar
  86   1          XBR2 |= 0x40;
  87   1      }
  88          
  89          void LedInit()
  90          {
  91   1        Led_Port_Init();
  92   1        P5 |= 0xff;
  93   1        P6 |= 0x0f;
  94   1        P7 = 0xff;
  95   1      }
  96          
  97          void LedDispNum()  //ÊýÂë¹ÜÏÔÊ¾Êý×Ö
  98          {
  99   1        uchar temp[4];
 100   1        
 101   1        temp[0] = Time_num%10;// ÃëµÄ¸öÎ»
 102   1        temp[1] = Time_num%100/10;
 103   1        temp[2] = Time_num%1000/100;  
 104   1        temp[3] = Time_num/1000;
 105   1      
 106   1        // ×îÉÏ±ßÒ»ÐÐÏÔÊ¾
 107   1        select(4);display(temp[0]); Delay(500); P7 = 0xff;
 108   1        select(3);display(temp[1]); Delay(500); P7 = 0xff;
 109   1        select(2);display(temp[2]); P7 = P7 & ~0x80; Delay(500); P7 = 0xff;            //¼ÓÐ¡Êýµã
 110   1        select(1);display(temp[3]); if(temp[3] == 0) P7 = 0xff; Delay(500); P7 = 0xff; //³ýÁã
 111   1      
 112   1        // ÖÐ¼äÒ»ÐÐ
 113   1        select(8);display(1); Delay(500); P7 = 0xff;
 114   1        select(7);display(4); Delay(500); P7 = 0xff;
 115   1        select(6);display(1); Delay(500); P7 = 0xff;
 116   1        select(5);display(7); Delay(500); P7 = 0xff;  
C51 COMPILER V9.52.0.0   LED                                                               04/27/2022 16:47:32 PAGE 3   

 117   1      
 118   1        // ÏÂ±ßÒ»ÐÐ
 119   1        select(12);display(8); Delay(500); P7 = 0xff;
 120   1        select(11);display(9); Delay(500); P7 = 0xff;
 121   1        select(10);display(4); Delay(500); P7 = 0xff;
 122   1        select(9) ;display(1); Delay(500); P7 = 0xff;  
 123   1      }
 124          
 125          /*.ËãÊõÆ½¾ùÂË²¨
 126          ·½·¨½âÎö£º
 127          Á¬ÐøÈ¡N¸ö²ÉÑùÖµ½øÐÐÆ½¾ùÔËËã£¬NÖµ½Ï´óÊ±£ºÐÅºÅÆ½»¬¶È½Ï¸ß£¬µ«ÁéÃô¶È½ÏµÍ
 128          NÖµ½ÏÐ¡Ê±£ºÐÅºÅÆ½»¬¶È½ÏµÍ£¬µ«ÁéÃô¶È½Ï¸ß¡£NÖµµÄÑ¡È¡£ºÒ»°ã12×óÓÒ¡£
 129          ÓÅµã£º
 130          ÊÊÓ¦ÓÚ¶ÔÒ»°ã¾ßÓÐËæ»ú¸ÉÈÅµÄÐÅºÅ½øÐÐÂË²¨£¬ÕâÑùÐÅºÅµÄÌØµãÊÇÓÐÒ»¸öÆ½¾ùÖµ£¬ÐÅºÅÔÚÄ³Ò»ÊýÖµ·¶Î§¸½½üÉÏÏÂ²¨¶¯
 131          È±µã£º
 132          ¶ÔÓÚ²âÁ¿ËÙ¶È½ÏÂý»òÒªÇóÊý¾Ý¼ÆËãËÙ¶È½Ï¿ìµÄÊµÊ±¿ØÖÆ²¢²»ÊÊÓÃ£¬±È½ÏÀË·ÑRAM*/
 133          
 134          void Average_filter(void)//ËãÊõÆ½¾ùÂË²¨
 135          {
 136   1        long i = 0,t = 0;
 137   1        long sum = 0;
 138   1        for ( i = 0 ; i < 10 ; i++ )
 139   1        {
 140   2           //sum = sum + (int)(ADC0_result[1]-270)*1.101;
 141   2           sum = sum + v[i];    
 142   2        }
 143   1        t = sum /10; 
 144   1        w1 =  t*5/4096;
 145   1        x1 = (t*50)/4096-w1*10;
 146   1        y1 = (t*500)/4096-w1*100-x1*10;
 147   1        z1 = (t*5000)/4096-w1*1000-x1*100-y1*10;
 148   1        /*w1 =  t/1000;
 149   1        x1 = (t - w1*1000)/100;
 150   1        y1 = (t - w1*1000-x1*100)/10;
 151   1        z1 =  t - w1*1000-x1*100-y1*10; */
 152   1        result=(int)(t);
 153   1        result2=t*5000/4096;
 154   1        //return t;
 155   1      }
 156          /*.ÖÐÎ»ÖµÆ½¾ùÂË²¨·¨£¨·ÀÂö³å¸ÉÈÅÆ½¾ùÂË²¨·¨£©
 157          ·½·¨½âÎö£º
 158          Ïàµ±ÓÚÖÐÎ»ÖµÂË²¨+ËãÊõÆ½¾ùÂË²¨£¬Á¬Ðø²ÉÑùN¸öÊý¾Ý£¬È¥µôÒ»¸ö×î´óÖµºÍÒ»¸ö×îÐ¡Öµ£¬È»ºó¼ÆËãN-2¸öÊý¾ÝµÄËãÊõÆ½¾ùÖµ¡
             -£
 159          NÖµµÄÑ¡È¡£º3-14
 160          ÓÅµã£ºÈÚºÏÁËÁ½ÖÖÂË²¨·¨µÄÓÅµã
 161          ¶ÔÓÚÅ¼È»³öÏÖµÄÂö³åÐÔ¸ÉÈÅ£¬¿ÉÏû³ýÓÉÓÚÂö³å¸ÉÈÅËùÒýÆðµÄ²ÉÑùÖµÆ«²î¡£
 162          È±µã£º
 163          ²âÁ¿ËÙ¶È½ÏÂý£¬ºÍËã·¨Æ½¾ùÂË²¨Ò»Ñù£¬ÀË·ÑRAM¡£*/
 164          void Median_average_filter(void)//ÖÐÖµÆ½¾ùÂË²¨
 165          {
 166   1        long i,sum, average,max,min;
 167   1        average = 0;
 168   1        max = v[0];
 169   1        min = max;
 170   1        sum = 0;
 171   1        for ( i = 0; i<10;i++)
 172   1         {
 173   2            sum = sum + v[i];
 174   2            if(v[i] > max)
 175   2            {
 176   3              max = v[i];
 177   3            }
C51 COMPILER V9.52.0.0   LED                                                               04/27/2022 16:47:32 PAGE 4   

 178   2            if(v[i] < min)
 179   2            {
 180   3              min = v[i];
 181   3            } 
 182   2         }
 183   1        sum = sum - max -min;
 184   1        average = sum /8 ;
 185   1        w1 =  average*5/4096;
 186   1        x1 = (average*50)/4096-w1*10;
 187   1        y1 = (average*500)/4096-w1*100-x1*10;
 188   1        z1 = (average*5000)/4096-w1*1000-x1*100-y1*10;
 189   1        /*w1 =  average/1000;
 190   1        x1 = (average-w1*1000)/100;
 191   1        y1 = (average - w1*1000-x1*100)/10;
 192   1        z1 =  average - w1*1000-x1*100-y1*10; */
 193   1        result=(int)(average);
 194   1         result2=average*5000/4096;
 195   1        //return average;
 196   1      }
 197          /*£¨»¬¶¯Æ½¾ùÂË²¨·¨£©
 198          ·½·¨½âÎö£º
 199          °ÑÁ¬ÐøÈ¡N¸ö²ÉÑùÖµ¿´³ÉÒ»¸ö¶ÓÁÐ£¬¶ÓÁÐµÄ³¤¶È¹Ì¶¨ÎªN£¬Ã¿´Î²ÉÑùµ½Ò»¸öÐÂÊý¾Ý·ÅÈë¶ÓÎ²£¬²¢ÈÓµôÔ­À´¶ÓÊ×µÄÒ»´ÎÊý¾Ý£¨
             -ÏÈ½øÏÈ³ö£©¡£
 200          °Ñ¶ÓÁÐÖÐµÄN¸öÊý¾Ý½øÐÐËãÊõÆ½¾ùÔËËã£¬¾Í¿É»ñµÃÐÂµÄÂË²¨½á¹û¡£NÖµµÄÑ¡È¡£ºÒ»°ã12.
 201          ÓÅµã£º
 202          ¶ÔÖÜÆÚÐÔ¸ÉÈÅÓÐÁ¼ºÃµÄÒÖÖÆ×÷ÓÃ£¬Æ½»¬¶È¸ß£¬ÊÊÓ¦ÓÚ¸ßÆµÕñµ´µÄÏµÍ³
 203          È±µã£º
 204          ÁéÃô¶ÈµÍ£¬¶ÔÅ¼È»³öÏÖµÄÂö³åÐÔ¸ÉÈÅµÄÒÖÖÆ×÷ÓÃ½Ï²î¡£²»Ò×Ïû³ýÓÉÓÚÂö³å¸ÉÈÅËùÒýÆð´òµÄ²ÉÑùÖµÆ«²î£¬²»ÊÊÓÃÓÚÂö³å¸ÉÈÅ
             -±È½ÏÑÏÖØµÄ³¡ºÏ
 205          ÀË·ÑRAM*/
 206            int i = 0;
 207          void Sliding_filter(void)//»¬¶¯Æ½¾ùÂË²¨
 208          {
 209   1        long s;
 210   1      //  int count;
 211   1      //  int sum=0;
 212   1      //  i++;
 213   1      //  v[i] = (int)(ADC0_result[1]-270)*1.101;
 214   1      //  if ( i == 12 ) i = 0;
 215   1      //  for ( count = 1;count < 13;count++) sum = sum + v[count];
 216   1      
 217   1        slidesum-=v[samplepos];
 218   1        slidesum+=v[(samplepos+9)%10];
 219   1        s = slidesum /9;
 220   1        //if(s<0) s=0;
 221   1        if(s>4095) s=4095;
 222   1        //s = s/4096*5000;
 223   1        w1 =  s*5/4096;
 224   1        x1 = (s*50)/4096-w1*10;
 225   1        y1 = (s*500)/4096-w1*100-x1*10;
 226   1        z1 = (s*5000)/4096-w1*1000-x1*100-y1*10;
 227   1        /*w1 =  s/1000;
 228   1        x1 = (s-w1*1000)/100;
 229   1        y1 = (s - w1*1000-x1*100)/10;
 230   1        z1 =  s - w1*1000-x1*100-y1*10;*/
 231   1        result=(int)(s);
 232   1        result2=s*5000/4096;
 233   1        //return s;
 234   1      }
 235          
 236          /*µÚ 2 ÖÖ·½·¨ ÖÐÎ»ÖµÂË²¨·¨
 237          A ·½·¨
C51 COMPILER V9.52.0.0   LED                                                               04/27/2022 16:47:32 PAGE 5   

 238          Á¬Ðø²ÉÑù N ´Î£¨N È¡ÆæÊý£©°Ñ N ´Î²ÉÑùÖµ°´´óÐ¡ÅÅÁÐÈ¡ÖÐ¼äÖµÎª±¾´ÎÓÐÐ§Öµ
 239          B ÓÅµã
 240          ÄÜÓÐÐ§¿Ë·þÒòÅ¼È»ÒòËØÒýÆðµÄ²¨¶¯¸ÉÈÅ¶ÔÎÂ¶È¡¢ÒºÎ»µÄ±ä»¯»ºÂýµÄ±»²â²ÎÊýÓÐÁ¼ºÃµÄÂË²¨Ð§¹û
 241          C È±µã
 242          ¶ÔÁ÷Á¿¡¢ËÙ¶ÈµÈ¿ìËÙ±ä»¯µÄ²ÎÊý²»ÒË
 243          D ÊµÀý³ÌÐò
 244          N Öµ¿É¸ù¾ÝÊµ¼ÊÇé¿öµ÷Õû
 245          ÅÅÐò²ÉÓÃÃ°ÅÝ·¨*/
 246          /*void Median_filter()
 247          {
 248            int i,j,temp,mid;
 249            for (j=0;j<10-1;j++)
 250            {
 251              for (i=0;i<10-j;i++)
 252              {
 253                if ( u[i]>u[i+1] )
 254                {
 255                temp = u[i];
 256                u[i] = u[i+1];
 257                u[i+1] = temp;
 258                }
 259              }
 260            }
 261            mid = (int)(u[4]+u[5])/2 +1;
 262          
 263            w3 =  mid/1000;
 264            x3 = (mid-w3*1000)/100;
 265            y3 = (mid - w3*1000-x3*100)/10;
 266            z3 =  mid - w3*1000-x3*100-y3*10; 
 267          }    */
 268          
 269          /* ÏÞ·ùÂË²¨·¨£¨ÓÖ³Æ³ÌÐòÅÐ¶ÏÂË²¨·¨£©
 270          A ·½·¨
 271          ¸ù¾Ý¾­ÑéÅÐ¶Ï£¬È·¶¨Á½´Î²ÉÑùÔÊÐíµÄ×î´óÆ«²îÖµ£¨ÉèÎª A£©Ã¿´Î¼ì²âµ½ÐÂÖµÊ±ÅÐ¶Ï£ºÈç¹û±¾´ÎÖµÓëÉÏ´ÎÖµ
 272          Ö®²î<=A,Ôò±¾´ÎÖµÓÐÐ§Èç¹û±¾´ÎÖµÓëÉÏ´ÎÖµÖ®²î>A,Ôò±¾´ÎÖµÎÞÐ§,·ÅÆú±¾´ÎÖµ,ÓÃÉÏ´ÎÖµ´úÌæ±¾´ÎÖµ
 273          B ÓÅµã
 274          ÄÜÓÐÐ§¿Ë·þÒòÅ¼È»ÒòËØÒýÆðµÄÂö³å¸ÉÈÅ
 275          C È±µã
 276          ÎÞ·¨ÒÖÖÆÄÇÖÖÖÜÆÚÐÔµÄ¸ÉÈÅÆ½»¬¶È²î
 277          D ÊµÀý³ÌÐò
 278          /* A Öµ¿É¸ù¾ÝÊµ¼ÊÇé¿öµ÷Õû
 279          value ÎªÓÐÐ§Öµ£¬new_value Îªµ±Ç°²ÉÑùÖµ
 280          ÂË²¨³ÌÐò·µ»ØÓÐÐ§µÄÊµ¼ÊÖµ */
 281          
 282          //void Limiting_filter()
 283          //{
 284          //int new_value;
 285          //new_value = (int)(ADC0_result[1]-270)*1.101;
 286          //if ( ( new_value - value > A ) || ( value - new_value > A )
 287          //return value;
 288          //return new_value;
 289          //}
 290          
 291          
 292          void show_f_row(void)
 293          {
 294   1        select(1);display(w1);P7 = P7 & ~0x80;Delay(500); P7 = 0xff;
 295   1        select(2);display(x1);Delay(500); P7 = 0xff;
 296   1        select(3);display(y1);Delay(500); P7 = 0xff;
 297   1        select(4);display(z1);Delay(500); P7 = 0xff;
 298   1      }
 299          void show_s_row(void)
C51 COMPILER V9.52.0.0   LED                                                               04/27/2022 16:47:32 PAGE 6   

 300          {
 301   1        select(5);display(w2);P7 = P7 & ~0x80;Delay(500); P7 = 0xff;
 302   1        select(6);display(x2);Delay(500); P7 = 0xff;
 303   1        select(7);display(y2);Delay(500); P7 = 0xff;
 304   1        select(8);display(z2);Delay(500); P7 = 0xff;
 305   1      }
 306          void show_t_row(void)
 307          {
 308   1        select(9);display(w3);P7 = P7 & ~0x80;Delay(500); P7 = 0xff;
 309   1        select(10);display(x3);Delay(500); P7 = 0xff;
 310   1        select(11);display(y3);Delay(500); P7 = 0xff;
 311   1        select(12);display(z3);Delay(500); P7 = 0xff;
 312   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2419    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      40
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
